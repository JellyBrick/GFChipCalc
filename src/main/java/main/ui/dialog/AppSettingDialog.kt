package main.ui.dialog

import main.App
import main.setting.Setting
import main.ui.component.ColorLabel
import main.ui.resource.AppFont
import main.ui.resource.AppText
import main.util.Fn
import main.util.IO
import main.util.Ref
import java.awt.Color
import java.awt.Dimension
import java.awt.Font
import java.awt.GridLayout
import java.awt.event.ActionEvent
import java.util.*
import java.util.function.Consumer
import javax.swing.*
import javax.swing.border.EmptyBorder
import javax.swing.event.ChangeEvent

/**
 *
 * @author Bunnyspa
 */
class AppSettingDialog private constructor(app: App) : JDialog() {
    private val app: App
    private var size: Ref<Int>? = null
    private var aLabel: ColorLabel? = null
    private fun init() {
        title = app.getText(AppText.DISPLAY_TITLE)
        languagePanel!!.border = EmptyBorder(GAP, GAP, GAP, GAP)
        colorFontPanel!!.border = EmptyBorder(GAP, GAP, GAP, GAP)
        aTabbedPane!!.addTab(app.getText(AppText.DISPLAY_LANGUAGE_TITLE), languagePanel)
        aTabbedPane!!.addTab(app.getText(AppText.DISPLAY_COLORFONT_TITLE), colorFontPanel)
        exportPropButton!!.text = app.getText(AppText.DISPLAY_EXPORT)
        langInfoLabel!!.text = app.getText(AppText.DISPLAY_HOWTO_ADDLANGUAGE)
        fontResetButton!!.text = app.getText(AppText.DISPLAY_FONT_RESET)
        okButton!!.text = app.getText(AppText.ACTION_OK)
        cancelButton!!.text = app.getText(AppText.ACTION_CANCEL)
        aLabel = ColorLabel()
        aLabel!!.horizontalAlignment = SwingConstants.CENTER
        previewPanel!!.add(aLabel)
        IO.locales.forEach(Consumer { locale: Locale -> localeComboBox!!.addItem(getLocaleName(locale)) })
        localeComboBox!!.selectedItem = getLocaleName(app.setting.locale)
        setColor(app.setting.colorPreset)
        size = Ref(app.setting.fontSize)
        fontSpinner!!.value = size!!.v
        val d = app.mf.preferredDialogSize
        preferredSize = Dimension(d.width, height)
        previewFont()
        addListeners()
        pack()
    }

    private fun addListeners() {
        exportPropButton!!.addActionListener { e: ActionEvent? -> IO.exportProps(app, this) }
        colorButton!!.addActionListener { e: ActionEvent? -> toggleColor() }
        fontSpinner!!.addChangeListener { e: ChangeEvent? ->
            size!!.v = fontSpinner!!.value as Int
            previewFont()
        }
        Fn.addEscDisposeListener(this)
    }

    private var colorPreset = 0
    private fun setColor(cp: Int) {
        colorPreset = cp % Setting.NUM_COLOR
        colorButton!!.text = app.getText(getColorStr(colorPreset))
        aLabel!!.setColorPreset(colorPreset)
        aLabel!!.repaint()
    }

    private fun toggleColor() {
        setColor(colorPreset + 1)
    }

    private fun previewFont() {
        aLabel!!.text = ""
        aLabel!!.font = selectedFont
        val s = app.getText(AppText.DISPLAY_LANGUAGE_PREVIEW)
        aLabel!!.text = s
    }

    private val selectedLocale: Locale
        get() = IO.locales[localeComboBox!!.selectedIndex]
    private val selectedFont: Font
        get() = AppFont.default.deriveFont(size!!.v.toFloat())

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private fun initComponents() {
        languagePanel = JPanel()
        langInfoLabel = JLabel()
        localeComboBox = JComboBox()
        exportPropButton = JButton()
        colorFontPanel = JPanel()
        fontSpinner = JSpinner()
        colorButton = JButton()
        previewPanel = JPanel()
        fontResetButton = JButton()
        okButton = JButton()
        cancelButton = JButton()
        aTabbedPane = JTabbedPane()
        langInfoLabel!!.text = "lang info"
        exportPropButton!!.text = "save prop"
        val languagePanelLayout = GroupLayout(languagePanel)
        languagePanel!!.layout = languagePanelLayout
        languagePanelLayout.setHorizontalGroup(
            languagePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addComponent(
                    langInfoLabel,
                    GroupLayout.DEFAULT_SIZE,
                    GroupLayout.DEFAULT_SIZE,
                    Short.MAX_VALUE.toInt()
                )
                .addGroup(
                    GroupLayout.Alignment.TRAILING, languagePanelLayout.createSequentialGroup()
                        .addComponent(localeComboBox, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE.toInt())
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exportPropButton)
                )
        )
        languagePanelLayout.setVerticalGroup(
            languagePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(
                    languagePanelLayout.createSequentialGroup()
                        .addGroup(
                            languagePanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(
                                    localeComboBox,
                                    GroupLayout.PREFERRED_SIZE,
                                    GroupLayout.DEFAULT_SIZE,
                                    GroupLayout.PREFERRED_SIZE
                                )
                                .addComponent(exportPropButton)
                        )
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(langInfoLabel)
                )
        )
        fontSpinner!!.model = SpinnerNumberModel(1, 1, null, 1)
        fontSpinner!!.preferredSize = Dimension(50, 22)
        colorButton!!.text = "색상: 일반"
        previewPanel!!.border = BorderFactory.createLineBorder(Color(0, 0, 0))
        previewPanel!!.preferredSize = Dimension(400, 200)
        previewPanel!!.layout = GridLayout(1, 0)
        fontResetButton!!.text = "글꼴 크기 리셋"
        fontResetButton!!.addActionListener { evt: ActionEvent -> fontResetButtonActionPerformed(evt) }
        val colorFontPanelLayout = GroupLayout(colorFontPanel)
        colorFontPanel!!.layout = colorFontPanelLayout
        colorFontPanelLayout.setHorizontalGroup(
            colorFontPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addComponent(previewPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE.toInt())
                .addGroup(
                    colorFontPanelLayout.createSequentialGroup()
                        .addComponent(colorButton)
                        .addPreferredGap(
                            LayoutStyle.ComponentPlacement.RELATED,
                            GroupLayout.DEFAULT_SIZE,
                            Short.MAX_VALUE.toInt()
                        )
                        .addComponent(
                            fontSpinner,
                            GroupLayout.PREFERRED_SIZE,
                            GroupLayout.DEFAULT_SIZE,
                            GroupLayout.PREFERRED_SIZE
                        )
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fontResetButton)
                )
        )
        colorFontPanelLayout.setVerticalGroup(
            colorFontPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(
                    colorFontPanelLayout.createSequentialGroup()
                        .addGroup(
                            colorFontPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(
                                    fontSpinner,
                                    GroupLayout.DEFAULT_SIZE,
                                    GroupLayout.DEFAULT_SIZE,
                                    Short.MAX_VALUE.toInt()
                                )
                                .addComponent(
                                    colorButton,
                                    GroupLayout.DEFAULT_SIZE,
                                    GroupLayout.DEFAULT_SIZE,
                                    Short.MAX_VALUE.toInt()
                                )
                                .addComponent(fontResetButton)
                        )
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(
                            previewPanel,
                            GroupLayout.DEFAULT_SIZE,
                            GroupLayout.DEFAULT_SIZE,
                            Short.MAX_VALUE.toInt()
                        )
                )
        )
        defaultCloseOperation = DISPOSE_ON_CLOSE
        title = "색상/글꼴 설정"
        modalityType = ModalityType.APPLICATION_MODAL
        type = Type.UTILITY
        okButton!!.text = "확인"
        okButton!!.addActionListener { evt: ActionEvent -> okButtonActionPerformed(evt) }
        cancelButton!!.text = "취소"
        cancelButton!!.addActionListener { evt: ActionEvent -> cancelButtonActionPerformed(evt) }
        aTabbedPane!!.preferredSize = Dimension(200, 200)
        val layout = GroupLayout(contentPane)
        contentPane.layout = layout
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(
                    GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE.toInt())
                        .addComponent(okButton)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)
                        .addContainerGap()
                )
                .addComponent(aTabbedPane, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE.toInt())
        )
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(
                    GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(
                            aTabbedPane,
                            GroupLayout.DEFAULT_SIZE,
                            GroupLayout.DEFAULT_SIZE,
                            Short.MAX_VALUE.toInt()
                        )
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(
                            layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(cancelButton)
                                .addComponent(okButton)
                        )
                        .addContainerGap()
                )
        )
        pack()
    } // </editor-fold>//GEN-END:initComponents

    private fun okButtonActionPerformed(evt: ActionEvent) { //GEN-FIRST:event_okButtonActionPerformed
        app.setting.locale = selectedLocale
        app.setting.colorPreset = colorPreset
        app.setting.fontSize = fontSpinner!!.value as Int
        app.mf.refreshDisplay()
        app.mf.packAndSetInitSize()
        app.mf.settingFile_save()
        dispose()
    } //GEN-LAST:event_okButtonActionPerformed

    private fun cancelButtonActionPerformed(evt: ActionEvent) { //GEN-FIRST:event_cancelButtonActionPerformed
        dispose()
    } //GEN-LAST:event_cancelButtonActionPerformed

    private fun fontResetButtonActionPerformed(evt: ActionEvent) { //GEN-FIRST:event_fontResetButtonActionPerformed
        fontSpinner!!.value = Setting.DEFAULT_FONTSIZE
    } //GEN-LAST:event_fontResetButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private var aTabbedPane: JTabbedPane? = null
    private var cancelButton: JButton? = null
    private var colorButton: JButton? = null
    private var colorFontPanel: JPanel? = null
    private var exportPropButton: JButton? = null
    private var fontResetButton: JButton? = null
    private var fontSpinner: JSpinner? = null
    private var langInfoLabel: JLabel? = null
    private var languagePanel: JPanel? = null
    private var localeComboBox: JComboBox<String>? = null
    private var okButton: JButton? = null
    private var previewPanel: JPanel? = null // End of variables declaration//GEN-END:variables

    companion object {
        private const val GAP = 5
        fun getInstance(app: App): AppSettingDialog {
            return AppSettingDialog(app)
        }

        private fun getLocaleName(locale: Locale): String {
            return locale.toLanguageTag() + " : " + locale.getDisplayName(locale)
        }

        private fun getColorStr(preset: Int): String {
            return when (preset) {
                Setting.COLOR_NORMAL -> AppText.DISPLAY_COLOR_NORMAL
                Setting.COLOR_COLORBLIND -> AppText.DISPLAY_COLOR_COLORBLIND
                else -> throw AssertionError()
            }
        }
    }

    init {
        initComponents()
        this.app = app
        init()
    }
}