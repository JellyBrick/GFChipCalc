package main.ui.help

import main.App
import main.ui.resource.AppText
import main.util.Fn
import main.util.IO
import java.awt.event.ActionEvent
import javax.swing.*

/**
 *
 * @author Bunnyspa
 */
class HelpDialog private constructor(private val app: App) : JDialog() {
    private fun init() {
        title = app.getText(AppText.HELP_TITLE)
        versionLabel!!.text = "Version: " + App.VERSION.toData()
        authorLabel!!.text = Fn.toHTML(
            "Author: 바니스파 (Bunnyspa)" + System.lineSeparator()
                    + "bunnyspa242@gmail.com" + System.lineSeparator()
                    + "bunnyspa@naver.com"
        )
        chipButton!!.text = app.getText(AppText.HELP_CHIP)
        appButton!!.text = app.getText(AppText.HELP_PROGRAM)
        proxyButton!!.text = app.getText(AppText.HELP_PROXY)
        changelogButton!!.text = app.getText(AppText.HELP_CHANGELOG)
        aboutButton!!.text = app.getText(AppText.HELP_ABOUT)
        closeButton!!.text = app.getText(AppText.ACTION_CLOSE)
        addListeners()
        pack()
    }

    private fun addListeners() {
        Fn.addEscDisposeListener(this)
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private fun initComponents() {
        chipButton = JButton()
        appButton = JButton()
        closeButton = JButton()
        proxyButton = JButton()
        aboutButton = JButton()
        changelogButton = JButton()
        versionLabel = JLabel()
        authorLabel = JLabel()
        defaultCloseOperation = DISPOSE_ON_CLOSE
        title = "도움말"
        modalityType = ModalityType.APPLICATION_MODAL
        isResizable = false
        type = Type.UTILITY
        chipButton!!.text = "칩셋 가이드"
        chipButton!!.addActionListener { evt: ActionEvent -> chipButtonActionPerformed(evt) }
        appButton!!.text = "칩셋 조합기 가이드"
        appButton!!.addActionListener { evt: ActionEvent -> appButtonActionPerformed(evt) }
        closeButton!!.text = "닫기"
        closeButton!!.addActionListener { evt: ActionEvent -> closeButtonActionPerformed(evt) }
        proxyButton!!.text = "프록시 가이드"
        proxyButton!!.addActionListener { evt: ActionEvent -> proxyButtonActionPerformed(evt) }
        aboutButton!!.text = "정보"
        aboutButton!!.addActionListener { evt: ActionEvent -> aboutButtonActionPerformed(evt) }
        changelogButton!!.text = "업데이트 정보"
        changelogButton!!.addActionListener { evt: ActionEvent -> changelogButtonActionPerformed(evt) }
        versionLabel!!.horizontalAlignment = SwingConstants.CENTER
        versionLabel!!.text = "version"
        authorLabel!!.text = "author"
        val layout = GroupLayout(contentPane)
        contentPane.layout = layout
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(
                    GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(
                            layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                .addComponent(
                                    authorLabel,
                                    GroupLayout.DEFAULT_SIZE,
                                    GroupLayout.DEFAULT_SIZE,
                                    Short.MAX_VALUE.toInt()
                                )
                                .addComponent(
                                    chipButton,
                                    GroupLayout.Alignment.LEADING,
                                    GroupLayout.DEFAULT_SIZE,
                                    GroupLayout.DEFAULT_SIZE,
                                    Short.MAX_VALUE.toInt()
                                )
                                .addComponent(
                                    appButton,
                                    GroupLayout.Alignment.LEADING,
                                    GroupLayout.DEFAULT_SIZE,
                                    GroupLayout.DEFAULT_SIZE,
                                    Short.MAX_VALUE.toInt()
                                )
                                .addComponent(
                                    closeButton,
                                    GroupLayout.Alignment.LEADING,
                                    GroupLayout.DEFAULT_SIZE,
                                    GroupLayout.DEFAULT_SIZE,
                                    Short.MAX_VALUE.toInt()
                                )
                                .addComponent(
                                    proxyButton,
                                    GroupLayout.Alignment.LEADING,
                                    GroupLayout.DEFAULT_SIZE,
                                    GroupLayout.DEFAULT_SIZE,
                                    Short.MAX_VALUE.toInt()
                                )
                                .addComponent(
                                    aboutButton,
                                    GroupLayout.Alignment.LEADING,
                                    GroupLayout.DEFAULT_SIZE,
                                    GroupLayout.DEFAULT_SIZE,
                                    Short.MAX_VALUE.toInt()
                                )
                                .addComponent(
                                    changelogButton,
                                    GroupLayout.Alignment.LEADING,
                                    GroupLayout.DEFAULT_SIZE,
                                    GroupLayout.DEFAULT_SIZE,
                                    Short.MAX_VALUE.toInt()
                                )
                                .addComponent(
                                    versionLabel,
                                    GroupLayout.Alignment.LEADING,
                                    GroupLayout.DEFAULT_SIZE,
                                    GroupLayout.DEFAULT_SIZE,
                                    Short.MAX_VALUE.toInt()
                                )
                        )
                        .addContainerGap()
                )
        )
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(
                    layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(versionLabel)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(authorLabel)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chipButton)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(appButton)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(proxyButton)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(changelogButton)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aboutButton)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closeButton)
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE.toInt())
                )
        )
        pack()
    } // </editor-fold>//GEN-END:initComponents

    private fun closeButtonActionPerformed(evt: ActionEvent) { //GEN-FIRST:event_closeButtonActionPerformed
        dispose()
    } //GEN-LAST:event_closeButtonActionPerformed

    private fun chipButtonActionPerformed(evt: ActionEvent) { //GEN-FIRST:event_chipButtonActionPerformed
        Fn.open(this, HelpChipDialog(app))
    } //GEN-LAST:event_chipButtonActionPerformed

    private fun appButtonActionPerformed(evt: ActionEvent) { //GEN-FIRST:event_appButtonActionPerformed
        Fn.open(this, HelpAppDialog(app))
    } //GEN-LAST:event_appButtonActionPerformed

    private fun proxyButtonActionPerformed(evt: ActionEvent) { //GEN-FIRST:event_proxyButtonActionPerformed
        Fn.open(this, HelpProxyDialog(app))
    } //GEN-LAST:event_proxyButtonActionPerformed

    private fun aboutButtonActionPerformed(evt: ActionEvent) { //GEN-FIRST:event_aboutButtonActionPerformed
        Fn.open(this, HelpAboutDialog(app))
    } //GEN-LAST:event_aboutButtonActionPerformed

    private fun changelogButtonActionPerformed(evt: ActionEvent) { //GEN-FIRST:event_changelogButtonActionPerformed
        IO.openWeb(app, this, LINK_CHANGELOG)
    } //GEN-LAST:event_changelogButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private var aboutButton: JButton? = null
    private var appButton: JButton? = null
    private var authorLabel: JLabel? = null
    private var changelogButton: JButton? = null
    private var chipButton: JButton? = null
    private var closeButton: JButton? = null
    private var proxyButton: JButton? = null
    private var versionLabel: JLabel? = null // End of variables declaration//GEN-END:variables

    companion object {
        private const val LINK_CHANGELOG = "https://github.com/Bunnyspa/GFChipCalc/blob/master/changelog.md"
        fun getInstance(app: App): HelpDialog {
            return HelpDialog(app)
        }
    }

    init {
        initComponents()
        init()
    }
}