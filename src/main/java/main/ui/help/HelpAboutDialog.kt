package main.ui.help

import main.App
import main.ui.resource.AppImage
import main.ui.resource.AppText
import main.util.Fn
import java.awt.Component
import java.awt.event.ActionEvent
import java.awt.event.MouseAdapter
import java.awt.event.MouseEvent
import java.util.function.Consumer
import javax.swing.*

/**
 *
 * @author Bunnyspa
 */
class HelpAboutDialog(private val app: App) : JDialog() {
    private var fired = false
    private val timer = Timer(1000) { e: ActionEvent? ->
        if (!fired) {
            fire()
            fired = true
        }
    }

    private fun init() {
        title = app.getText(AppText.HELP_ABOUT)
        imageLabel!!.icon = AppImage.BANNER
        label!!.text = Fn.toHTML(
            "<center>" + App.NAME_EN + "</center>" + System.lineSeparator()
                    + "Developer: Bunnyspa" + System.lineSeparator()
                    + "Email:" + System.lineSeparator()
                    + "bunnyspa@naver.com" + System.lineSeparator()
                    + "bunnyspa242@gmail.com" + System.lineSeparator()
                    + "(Korean and English)" + System.lineSeparator()
                    + System.lineSeparator()
                    + "This application is a free fan-made application." + System.lineSeparator()
                    + "Girls' Frontline and its related images are registered trademarks of Sunborn Network Technology Co., Ltd." + System.lineSeparator()
                    + "This application is not affiliated with Sunborn Network Technology Co., Ltd. in any way." + System.lineSeparator()
                    + System.lineSeparator()
                    + "Stat presets are based on the following thread: https://gall.dcinside.com/m/micateam/999288" + System.lineSeparator()
                    + System.lineSeparator()
                    + "[English Translation]" + System.lineSeparator()
                    + "Bunnyspa" + System.lineSeparator()
                    + System.lineSeparator()
                    + "[Japanese Translation Team]" + System.lineSeparator()
                    + "xpfjqja" + System.lineSeparator()
                    + "apple" + System.lineSeparator()
                    + "naganeko" + System.lineSeparator()
                    + "ひかげ" + System.lineSeparator()
        )
        closeButton!!.text = app.getText(AppText.ACTION_CLOSE)
        addListeners()
        pack()
    }

    private fun addListeners() {
        Fn.addEscDisposeListener(this)
        Fn.getAllComponents(this).forEach(Consumer { c: Component? ->
            c!!.addMouseListener(object : MouseAdapter() {
                override fun mousePressed(e: MouseEvent) {
                    fired = false
                    timer.start()
                }

                override fun mouseReleased(e: MouseEvent) {
                    timer.stop()
                }
            })
        })
    }

    private fun fire() {
        Fn.open(this, HelpAboutHiddenDialog.getInstance(app))
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private fun initComponents() {
        closeButton = JButton()
        label = JLabel()
        imageLabel = JLabel()
        defaultCloseOperation = DISPOSE_ON_CLOSE
        modalityType = ModalityType.APPLICATION_MODAL
        isResizable = false
        type = Type.UTILITY
        closeButton!!.text = "닫기"
        closeButton!!.addActionListener { evt: ActionEvent -> closeButtonActionPerformed(evt) }
        label!!.horizontalAlignment = SwingConstants.CENTER
        label!!.text = "text"
        label!!.verticalAlignment = SwingConstants.TOP
        label!!.border = BorderFactory.createEmptyBorder(2, 2, 2, 2)
        val layout = GroupLayout(contentPane)
        contentPane.layout = layout
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(
                    layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(
                            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addGroup(
                                    layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE.toInt())
                                        .addComponent(closeButton)
                                )
                                .addComponent(
                                    label,
                                    GroupLayout.DEFAULT_SIZE,
                                    GroupLayout.DEFAULT_SIZE,
                                    Short.MAX_VALUE.toInt()
                                )
                                .addGroup(
                                    layout.createSequentialGroup()
                                        .addComponent(imageLabel)
                                        .addGap(0, 0, Short.MAX_VALUE.toInt())
                                )
                        )
                        .addContainerGap()
                )
        )
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(
                    GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(imageLabel)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(
                            label,
                            GroupLayout.DEFAULT_SIZE,
                            GroupLayout.DEFAULT_SIZE,
                            Short.MAX_VALUE.toInt()
                        )
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closeButton)
                        .addContainerGap()
                )
        )
        pack()
    } // </editor-fold>//GEN-END:initComponents

    private fun closeButtonActionPerformed(evt: ActionEvent) { //GEN-FIRST:event_closeButtonActionPerformed
        dispose()
    } //GEN-LAST:event_closeButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private var closeButton: JButton? = null
    private var imageLabel: JLabel? = null
    private var label: JLabel? = null // End of variables declaration//GEN-END:variables

    init {
        initComponents()
        init()
    }
}